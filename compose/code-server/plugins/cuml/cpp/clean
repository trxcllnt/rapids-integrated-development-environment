#! /usr/bin/env bash
set -Eeo pipefail;
cd "$(dirname "$(realpath "$0")")";
if [[ -d "$HOME/rapids/cuml" ]]; then

    tmp_env_file="$(mktemp)";
    touch "$HOME/rapids/.env";
    cp "$HOME/rapids/.env" "$tmp_env_file";

    on_exit() {
        ERRCODE="$?";
        rm -f "$tmp_env_file" >/dev/null 2>&1 || true;
        exit "$ERRCODE";
    }

    trap on_exit ERR EXIT HUP INT QUIT TERM STOP PWR;

    set -a && . "$tmp_env_file" && set +a;
    
    if [[ -d "$HOME/rapids/cuml" ]]; then
        echo "CUML_SOURCE_DIR=$HOME/rapids/cuml" >> "$tmp_env_file";
        echo "CUML_CPP_SOURCE_DIR=$(cpp-source-dir-util --project=cuml)" >> "$tmp_env_file";
        echo "CUML_CPP_BINARY_DIR=$(cpp-binary-dir-util --project=cuml)" >> "$tmp_env_file";
    fi

    volumes="";
    if [[ -d "$HOME/rapids/cuml" ]]; then volumes+="-v $HOME/rapids/cuml:$HOME/rapids/cuml "; fi

    docker run \
        --rm -it --runtime nvidia \
        --env-file "$tmp_env_file" \
        --name "clean-cuml-cpp-$(basename "$tmp_env_file")" \
        ${volumes} \
        pauletaylor/rapids-ide:cpp-builder-cuda11.6.0-ubuntu20.04 \
        bash -c '
        clean-cuml-cpp;' _ "${@}";
fi
