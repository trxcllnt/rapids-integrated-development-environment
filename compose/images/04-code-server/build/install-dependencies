#! /usr/bin/env bash

set -Eeox pipefail

#######################################################
# Install apt repos
#######################################################

# Install GitHub apt repository
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg \
    | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" \
    | tee /etc/apt/sources.list.d/github-cli.list > /dev/null

# Install llvm apt repository
wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -

cat << EOF > /etc/apt/sources.list.d/llvm-${CLANG_FORMAT_VERSION}.list
deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-${CLANG_FORMAT_VERSION} main
deb-src  http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-${CLANG_FORMAT_VERSION} main
EOF

#######################################################
# Install dependencies
#######################################################
apt update
apt install -y --no-install-recommends      \
    jq gettext                              \
    `# GitHub CLI, and Git LFS`             \
    gh git-lfs                              \
    `# gdb and lldb for debugging`          \
    gdb                                     \
    `# clang-tidy for C++ linting`          \
    clang-tidy-${CLANG_FORMAT_VERSION}      \
    `# clang-format for C++ formatting`     \
    clang-format-${CLANG_FORMAT_VERSION}    \
    `# need these for docker-in-docker`     \
    pigz iptables openssl xz-utils          \
    `# code-server dependencies`            \
    `# https://github.com/coder/code-server/blob/5bc26e90cbf17c9e79d5646fd93838fc0082d9ab/ci/release-image/Dockerfile#L4-L19` \
    lsb-release bash-completion             \
    procps openssh-client sudo less         \
    dumb-init zsh htop locales man vim nano \
 && git lfs install

#######################################################
# Install update-alternatives links
#######################################################

# Set alternatives for clang-tidy
(update-alternatives --remove-all clang-tidy >/dev/null 2>&1 || true)
update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-${CLANG_FORMAT_VERSION} ${CLANG_FORMAT_VERSION}

# Set clang-tidy-${CLANG_FORMAT_VERSION} as the default clang-tidy
update-alternatives --set clang-tidy /usr/bin/clang-tidy-${CLANG_FORMAT_VERSION}

# Set alternatives for clang-format
(update-alternatives --remove-all clang-format >/dev/null 2>&1 || true)
update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-${CLANG_FORMAT_VERSION} ${CLANG_FORMAT_VERSION}

# Set clang-format-${CLANG_FORMAT_VERSION} as the default clang-format
update-alternatives --set clang-format /usr/bin/clang-format-${CLANG_FORMAT_VERSION}

#######################################################
# Generate shell completion scripts for GitHub CLI
#######################################################
echo "eval \"\$(gh completion -s bash)\"" >> /home/user/.bashrc

#######################################################
# Install code-server
#######################################################
dpkg -i /usr/src/code-server.deb

#######################################################
# Install code-server extensions
#######################################################

# CMake language support
code-server --install-extension twxs.cmake || true;
# Clang-Format
code-server --install-extension xaver.clang-format || true;
# Doxygen Documentation Generator
code-server --install-extension cschlosser.doxdocgen || true;
# Tasks Shell Input
code-server --install-extension /usr/src/tasks-shell-input.vsix || true;
# MS C++ Tools
code-server --install-extension /usr/src/ms-vscode.cpptools.vsix || true;
# NVIDIA Nsight
code-server --install-extension /usr/src/nsight-vscode.vsix || true;
