#! /usr/bin/env bash

set -Eeo pipefail

BUILD_TESTS=${BUILD_TESTS:-OFF}
CUDA_LINEINFO=${CUDA_LINEINFO:-OFF}
CUDA_KERNELINFO=${CUDA_KERNELINFO:-OFF}
DISABLE_DEPRECATION_WARNINGS=${DISABLE_DEPRECATION_WARNINGS:-ON}

CMAKE_BUILD_TYPE=${BUILD_TYPE:-Release}
CUDA_ARCHITECTURES=${CUDA_ARCHITECTURES:-NATIVE}
CFLAGS="${CFLAGS:+$CFLAGS }-fdiagnostics-color=always"
CXXFLAGS="${CXXFLAGS:+$CXXFLAGS }-fdiagnostics-color=always"
CUDAFLAGS="${CUDAFLAGS:+$CUDAFLAGS }-Xcompiler=-fdiagnostics-color=always"

BUILD_SHARED_LIBS=${BUILD_SHARED_LIBS:-ON}
RAFT_USE_FAISS_STATIC=OFF

if [[ $BUILD_SHARED_LIBS == OFF ]]; then
    RAFT_USE_FAISS_STATIC=ON
else
    BUILD_SHARED_LIBS=ON
fi

time (
    set -x;
    CFLAGS=${CFLAGS} \
    CXXFLAGS=${CXXFLAGS} \
    CUDAFLAGS=${CUDAFLAGS} \
    cmake -GNinja \
          -S /opt/rapids/raft/cpp \
          -B /opt/rapids/raft/cpp/build \
          \
          -D rmm_ROOT=/opt/rapids/rmm/build \
          \
          -D DETECT_CONDA_ENV=OFF \
          -D RAFT_COMPILE_LIBRARIES=ON \
          -D RAFT_EXCLUDE_FAISS_FROM_ALL=OFF \
          \
          -D BUILD_SHARED_LIBS=${BUILD_SHARED_LIBS} \
          -D RAFT_USE_FAISS_STATIC=${RAFT_USE_FAISS_STATIC} \
          \
          -D BUILD_TESTS=${BUILD_TESTS} \
          -D DISABLE_DEPRECATION_WARNINGS=${DISABLE_DEPRECATION_WARNINGS} \
          \
          -D CUDA_ENABLE_LINEINFO=${CUDA_LINEINFO} \
          -D CUDA_ENABLE_KERNELINFO=${CUDA_KERNELINFO} \
          \
          -D CMAKE_EXPORT_COMPILE_COMMANDS=ON \
          -D CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
          -D CMAKE_CUDA_ARCHITECTURES=${CUDA_ARCHITECTURES} \
          -D CMAKE_C_COMPILER_LAUNCHER=/usr/local/bin/sccache \
          -D CMAKE_CXX_COMPILER_LAUNCHER=/usr/local/bin/sccache \
          -D CMAKE_CUDA_COMPILER_LAUNCHER=/usr/local/bin/sccache \
          \
          ${@};
    { set +x; } 2>/dev/null;
    echo -n "libraft configure time:";
)
