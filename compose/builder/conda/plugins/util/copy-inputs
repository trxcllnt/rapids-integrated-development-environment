#! /usr/bin/env bash

set -Eeo pipefail

cd $(dirname "$(realpath "$0")")

PROJECT=
EXTERNAL_SOURCE_DIR=
EXTERNAL_CPP_BINARY_DIR=
EXTERNAL_PYTHON_BINARY_DIR=

while [[ "$#" -gt 0 ]]; do
    case $1 in
        --project=*) PROJECT="${1#--project=}";;
        --src=*) EXTERNAL_SOURCE_DIR="${1#--src=}";;
        --cpp=*) EXTERNAL_CPP_BINARY_DIR="${1#--cpp=}";;
        --python=*) EXTERNAL_PYTHON_BINARY_DIR="${1#--python=}";;
        *) ;;
    esac; shift;
done

if [[ -z "$EXTERNAL_SOURCE_DIR" || ! -d "$EXTERNAL_SOURCE_DIR" ]]; then
    exit 1;
fi

INTERNAL_SOURCE_DIR="/opt/rapids/$PROJECT";

# Copy external source dir to internal source dir
(
    mkdir -p "$INTERNAL_SOURCE_DIR";
    cp -ar "$EXTERNAL_SOURCE_DIR"/* "$INTERNAL_SOURCE_DIR"/;
) || true;

INTERNAL_CPP_SOURCE_DIR="$(cpp-source-dir-util --project="$PROJECT")";
INTERNAL_CPP_BINARY_DIR="$(cpp-binary-dir-util --project="$PROJECT")";
INTERNAL_PYTHON_BINARY_DIR="$(python-binary-dir-util --project="$PROJECT")";

mkdir -p "$INTERNAL_CPP_SOURCE_DIR" "$INTERNAL_CPP_BINARY_DIR" "$INTERNAL_PYTHON_BINARY_DIR";

# Move the cpp build dir from its external location to its inner location
if [[ -n "$EXTERNAL_CPP_BINARY_DIR" ]]; then
(
    SUF="$(realpath -m --relative-to="$EXTERNAL_SOURCE_DIR" "$EXTERNAL_CPP_BINARY_DIR")";
    mkdir -p "$INTERNAL_SOURCE_DIR/$SUF";
    if [[ -d "$INTERNAL_SOURCE_DIR/$SUF" ]]; then
        tmp_dir="$(mktemp -d)";
        mv "$INTERNAL_SOURCE_DIR/$SUF" "$tmp_dir/build";
        rm -rf "$INTERNAL_CPP_BINARY_DIR";
        mv "$tmp_dir/build" "$INTERNAL_CPP_BINARY_DIR";
        rm -rf "$tmp_dir";
    fi
) || true;
fi;

# Move the python build dir from its external location to its inner location
if [[ -n "$EXTERNAL_PYTHON_BINARY_DIR" ]]; then
(
    SUF="$(realpath -m --relative-to="$EXTERNAL_SOURCE_DIR" "$EXTERNAL_PYTHON_BINARY_DIR")";
    mkdir -p "$INTERNAL_SOURCE_DIR/$SUF";
    if [[ -d "$INTERNAL_SOURCE_DIR/$SUF" ]]; then
        tmp_dir="$(mktemp -d)";
        mv "$INTERNAL_SOURCE_DIR/$SUF" "$tmp_dir/build";
        rm -rf "$INTERNAL_PYTHON_BINARY_DIR";
        mv "$tmp_dir/build" "$INTERNAL_PYTHON_BINARY_DIR";
        rm -rf "$tmp_dir";
    fi
) || true;
fi
